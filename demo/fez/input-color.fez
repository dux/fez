<script>
  FAST = true

  updateColor(e) {
    this.state.showPicker = false
    this.setColor(e.target.value)
  }

  setColor(value) {
    this.state.color = value

    if (this.props.onchange) {
      this.props.onchange(this.state.color)
    }
  }

  togglePicker() {
    this.state.showPicker = !this.state.showPicker
  }

  closePicker(e) {
    if (!this.root.contains(e.target)) {
      this.state.showPicker = false
    }
  }

  onPropsChange(name, value) {
    if (name == 'value') {
      this.setColor(value)
    }
  }

  onMount(props) {
    this.setColor(props.value || '#000000')
    this.state.showPicker = false
  }
</script>

<style>
  :fez {
    display: inline-block;
    position: relative;
    font-family: system-ui, -apple-system, sans-serif;

    .color-input-wrapper {
      display: flex;
      align-items: center;
      gap: 8px;
      padding: 6px 10px;
      border: 1px solid #ddd;
      border-radius: 4px;
      background: white;
      cursor: pointer;
      transition: border-color 0.2s;

      &:hover {
        border-color: #999;
      }

      &:focus-within {
        border-color: #4A90E2;
        outline: 2px solid rgba(74, 144, 226, 0.2);
        outline-offset: 1px;
      }
    }

    .color-preview {
      width: 24px;
      height: 24px;
      border-radius: 4px;
      border: 1px solid rgba(0,0,0,0.1);
      box-shadow: inset 0 0 0 1px rgba(255,255,255,0.2);
    }

    .color-value {
      font-size: 14px;
      color: #333;
      font-family: monospace;
      user-select: none;
    }

    .color-picker-popup {
      position: absolute;
      top: calc(100% + 4px);
      left: 0;
      z-index: 1000;
      background: white;
      border: 1px solid #ddd;
      border-radius: 4px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.15);
      padding: 8px;
      min-width: 200px;

      input[type="color"] {
        width: 100%;
        height: 150px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        padding: 0;

        &::-webkit-color-swatch-wrapper {
          padding: 0;
        }

        &::-webkit-color-swatch {
          border: none;
          border-radius: 4px;
        }
      }
    }

    &.disabled {
      .color-input-wrapper {
        background: #f5f5f5;
        cursor: not-allowed;
        opacity: 0.6;

        &:hover {
          border-color: #ddd;
        }
      }
    }
  }
</style>

<div class="color-input-wrapper {{ props.disabled ? 'disabled' : '' }}" onclick="fez.togglePicker()">
  <div class="color-preview" style="background-color: {{ state.color }}"></div>
  <span class="color-value">{{ state.color }}</span>
</div>

<div class="color-picker-popup" style="display: {{ state.showPicker && !props.disabled ? 'block' : 'none' }};">
  <input
    name={{ props.name }}
    type="color"
    value="{{ state.color }}"
    onchange="fez.updateColor(event)"
    onclick="event.stopPropagation()"
  />
</div>

