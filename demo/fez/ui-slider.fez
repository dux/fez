<script>
  resizeSelf() {
    const width = this.find('.slider-container')?.getBoundingClientRect().width ?? 0
    this.setStyle('--offset', `-${width * this.state.slide}px`)
  }

  setSlide(num) {
    this.state.slide = parseInt(num)

    if (this.state.slide < 0) {
      this.state.slide = this.slidesCount - 1
    } else if (this.state.slide >= this.slidesCount) {
      this.state.slide = 0
    }

    this.resizeSelf()
  }

  changeSlide(direction){
    this.setSlide( this.state.slide += direction )
  }

  init() {
    this.slidesCount = this.childNodes().length
    this.setSlide(0)
    this.onWindowResize(this.resizeSelf, 100)
  }
</script>

<style>
  :fez {
    position: relative;

    .slider-container {
      position: relative;
      width: 100%;
      overflow: hidden;

      .slot-parent {
        transition: transform 0.3s ease;
        transform: translateX(var(--offset));

        .fez-slot {
          display: flex;

          & > div {
            width: 100%;
            flex-shrink: 0;
          }
        }
      }
    }

    .arrow {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      width: 15px;
      height: 15px;
      background: rgba(255, 255, 255, 0.9);
      border: 1px solid rgba(0, 0, 0, 0.3);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.3s ease;
      z-index: 10;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);

      &:hover {
        background: rgba(255, 255, 255, 1);
        border-color: rgba(0, 0, 0, 0.5);
        transform: translateY(-50%) scale(1.1);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
      }

      span {
        color: #333;
        font-size: 24px;
        font-weight: bold;
        line-height: 1;
      }

      &.prev {
        left: -20px;
      }

      &.next {
        right: -20px;
      }
    }

    .dots {
      position: absolute;
      bottom: 20px;
      left: 50%;
      transform: translateX(-50%);
      display: flex;
      gap: 8px;
      z-index: 10;

      .dot {
        width: 12px;
        height: 12px;
        border-radius: 50%;
        background: rgba(255, 255, 255, 0.8);
        border: 1px solid rgba(0, 0, 0, 0.4);
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);

        &:hover {
          background: rgba(255, 255, 255, 1);
          border-color: rgba(0, 0, 0, 0.6);
          transform: scale(1.3);
          box-shadow: 0 3px 6px rgba(0, 0, 0, 0.3);
        }

        &.active {
          background: #333;
          border-color: rgba(255, 255, 255, 0.8);
          transform: scale(1.3);
          box-shadow: 0 3px 6px rgba(0, 0, 0, 0.4);
        }
      }
    }
  }
</style>

<div class="slider-container">
  <div class="slot-parent">
    <slot />
  </div>
</div>

{{if props.arrows}}
  <div class="arrow prev" onclick="fez.changeSlide(-1)">
    <span>‹</span>
  </div>

  <div class="arrow next" onclick="fez.changeSlide(1)">
    <span>›</span>
  </div>
{{/if}}

{{if props.dots}}
  <div class="dots">
    {{#each Array(slidesCount).fill(0) as dot, index}}
      <div class="dot {{ state.slide === index ? 'active' : '' }}" onclick="fez.setSlide({{ index }})"></div>
    {{/each}}
  </div>
{{/if}}

